devtools::install_github("Marga8/HDGCvar")
library(HDGCvar)

DATA_R_clima3 <- read_excel("DATA_R_clima3.xlsx")
ts.plot(DATA_R_clima3)

Dates<-c(1871:2014)
dataset_x_ggplot<-cbind(Dates, DATA_R_clima3[,8:10])
plots_series<-list()

plots_series[[1]]<-ggplot()+ geom_line(data = dataset_x_ggplot, aes(x = Dates, y = CO2, color = "#00AFBB")) +
  geom_line(data = dataset_x_ggplot, aes(x = Dates, y = CH4, color = "coral1")) +
  geom_line(data = dataset_x_ggplot, aes(x = Dates, y = N2O, color = "deeppink4"))+
  xlab('Years') +
  ylab('W/m^2')+ scale_color_discrete(name = "GHG", labels = c("CO2", "CH4", "N2O"))
plots_series[[2]]<-ggplot(data = DATA_R_clima3, aes(x = Dates, y = V))+ geom_line(color = "#00AFBB", size = 0.5) +
  xlab("Years")  + ylab("Stratospheric Aerosols")
plots_series[[3]]<-ggplot(data = DATA_R_clima3, aes(x = Dates, y = Y))+ geom_line(color = "#00AFBB", size = 0.5) +
  xlab("Years")  + ylab("GDP (log 2010 USD)")
plots_series[[4]]<-ggplot(data = DATA_R_clima3, aes(x = Dates, y = A))+ geom_line(color = "#00AFBB", size = 0.5) +
  xlab("Years")  + ylab("Tropospheric Aerosols")
plots_series[[5]]<-ggplot(data = DATA_R_clima3, aes(x = Dates, y = N))+ geom_line(color = "#00AFBB", size = 0.5) +
  xlab("Years")  + ylab("El Nino SOI")
plots_series[[6]]<-ggplot(data = DATA_R_clima3, aes(x = Dates, y = O))+ geom_line(color = "#00AFBB", size = 0.5) +
  xlab("Years")  + ylab("Ocean Heat Content")
grid.arrange(grobs=plots_series)



## Lag-length automatic selection ##
selected_lag<-lags_upbound_BIC(DATA_R_clima3,p_max=10)
print(selected_lag) #5
####################################

#create GC network 
network<-HDGC_VAR_all(DATA_R_clima3, p = selected_lag, d = 2, bound = 0.5 * nrow(DATA_R_clima3), 
                      parallel = TRUE, n_cores = NULL)

#plot network
Plot_GC_all_COR(network, Stat_type="FS_cor",alpha=0.1, multip_corr=list(T,"none"),
                directed=T, layout=layout.circle, main="Climate Network",edge.arrow.size=.5,
                vertex.size=16, vertex.color=c("lightblue"), vertex.frame.color="blue",
                vertex.label.size=4,vertex.label.color="black",vertex.label.cex=0.8, 
                vertex.label.dist=c(0,0,0,0,0,0), edge.curved=0,cluster=list(F,5,"black",0.8,1,0)) 

#DO various stuff##
input<-as.matrix(network[["tests"]][,,2,2])#p_values
input<-t(input)
input[input < 0.1] <- 1 #put =1 values < alpha
input[is.na(input)] <- 0 #put =0 the diagonal
input[input != 1] <- 0 #put =0 values > alpha
my_graph=graph_from_adjacency_matrix(input, mode='directed',diag=F,add.rownames = TRUE )
V(my_graph)$label = rownames(input)
# Preferences
FROM_V <- 3#10#9#8
TO_V <- 5

# Calculate all simple paths from FROM_V to TO_V as list of vertecy sequences
graph_outlet <- all_simple_paths(my_graph,from=FROM_V,to=TO_V)

# Build sub-graphs to test
sub_graphs <- lapply(graph_outlet, function(vs) induced_subgraph(my_graph, vs))
plot(sub_graphs[[1]],layout=layout.circle, main="Climate Network",edge.arrow.size=.5,
     vertex.size=16, vertex.color=c("lightblue"), vertex.frame.color="blue",
     vertex.label.size=4,vertex.label.color="black",vertex.label.cex=0.8)

plot(my_graph,layout=layout.circle, main="Climate Network",edge.arrow.size=.5,
     vertex.size=16, vertex.color=c("lightblue"), vertex.frame.color="blue",
     vertex.label.size=4,vertex.label.color="black",vertex.label.cex=0.8)
# Colour and style vertecies
V(my_graph)$color <- "white"
V(my_graph)$color[unique(unlist(graph_outlet))] <- "lightblue"
V(my_graph)$color[c(FROM_V,TO_V)] <- "yellow"
# Colour each of the paths
E(my_graph)$color <- "gray"
E(my_graph)$width<- 1
#E(my_graph)$width[c(FROM_V,TO_V)]<-3
lapply(graph_outlet, function(x) E(my_graph, path=x)$color <<- "red")
lapply(graph_outlet, function(x) E(my_graph, path=x)$width <<- 3)

# Plot all paths and mark the group of vertecies through which paths flow
plot(my_graph,layout=layout.circle,main="Climate Network",edge.arrow.size=.5,
     vertex.size=c(16,16,25,16,25,16,16,16,16,16),vertex.label.size=4)
#plot(my_graph,layout=layout.circle, mark.groups=unique(unlist(graph_outlet)))

all_simple_paths(network_1, 8, 5) #from CO2 to T
all_simple_paths(network_1, 9, 5) #from CH4 to T
all_simple_paths(network_1, 10, 5) #from N2O to T


####### CLUSTERING ########
my_graph<-as.undirected(my_graph)
c1 = cluster_fast_greedy(my_graph)
mod<-modularity(c1)
B = modularity_matrix(my_graph, membership(c1))
#round(B[1,],2)
membership(c1)
numb_clust<-length(c1)
size_clust<-sizes(c1)
#crossing(c1, network)
plot(c1, network, layout=layout_with_fr)
#if(plotting==F){
plot(my_graph, vertex.color=membership(c1), layout=layout_with_fr,edge.arrow.size=.2,vertex.size=10,
     vertex.label.size=3,vertex.label.cex=0.38, vertex.label.dist=0, edge.curved=0)


## HEAT MAP table for p-values ##
pvals<-as.matrix(network[["tests"]][,,2,2]) 
pv_max <- 0.15
trunc_pvals <- pmin(pvals, pv_max)
series <-colnames(DATA_R_clima3)
GC_df <- data.frame(pvalue = c(trunc_pvals),
                    series_to = factor(rep(series, ncol(DATA_R_clima3)), levels = series),
                    series_from = factor(rep(series, each = ncol(DATA_R_clima3)), levels = series))

ggplot(GC_df, aes(x = series_from, y = series_to, fill = pvalue)) + 
  geom_tile(colour = "grey50") +
  scale_y_discrete(limits = rev(levels(GC_df$series_from))) +
  labs(x = "Granger causality from", y = "Granger causality to", fill = "p-value") +
  scale_fill_gradient2(low = "darkblue", mid = "blue", high = "white", midpoint = pv_max / 2) +
  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
        axis.text.x = element_text(angle = 0, size = 9),
        axis.text.y = element_text(size = 9),
        legend.position = "none")

############ BELOW A SERIES OF TRIALS Of IRF ##############
# IGNORE FROM HERE
#####################################################################################
### SMOOTH IRFs

prova<-PDS_smooth_LPS(y=DATA_R_clima3[,5],x=DATA_R_clima3[,8],q=DATA_R_clima3[,c(4,6,7,9,10)],r=DATA_R_clima3[,c(1,2,3)],h=40,d=2,p=selected_lag,a=0.05)
plot_LP(prova,name_y =colnames(DATA_R_clima3[,5]), name_x =colnames(DATA_R_clima3[,8]), unit_y = "points", unit_x = "point")+ labs(title = paste("One unit impulse of",colnames(DATA_R_clima3[,8]),", p=",selected_lag,sep=" "))


prova<-PDS_smooth_LPS(y=DATA_R_clima3[,5],x=DATA_R_clima3[,9],q=DATA_R_clima3[,c(4,6,7,10)],r=DATA_R_clima3[,c(1,2,3,8)],h=40,d=2,p=selected_lag,a=0.05)
plot_LP(prova,name_y =colnames(DATA_R_clima3[,5]), name_x =colnames(DATA_R_clima3[,9]), unit_y = "points", unit_x = "point")+ labs(title = paste("One unit impulse of",colnames(DATA_R_clima3[,9]),", p=",selected_lag,sep=" "))


prova<-PDS_smooth_LPS(y=DATA_R_clima3[,5],x=DATA_R_clima3[,10],q=DATA_R_clima3[,c(4,6,7)],r=DATA_R_clima3[,c(1,2,3,8,9)],h=40,d=2,p=selected_lag,a=0.05)
plot_LP(prova,name_y =colnames(DATA_R_clima3[,5]), name_x =colnames(DATA_R_clima3[,10]), unit_y = "points", unit_x = "point")+ labs(title = paste("One unit impulse of",colnames(DATA_R_clima3[,10]),", p=",selected_lag,sep=" "))


prova<-PDS_smooth_LPS(y=DATA_R_clima3[,5],x=DATA_R_clima3[,3],q=DATA_R_clima3[,c(4,6,7,8,9,10)],r=DATA_R_clima3[,c(1,2)],h=40,d=2,p=selected_lag,a=0.05)
plot_LP(prova,name_y =colnames(DATA_R_clima3[,5]), name_x =colnames(DATA_R_clima3[,3]), unit_y = "points", unit_x = "point")+ labs(title = paste("One unit impulse of",colnames(DATA_R_clima3[,3]),", p=",selected_lag,sep=" "))











plots_paper<-list()

## impulse of CO2 on T ##
for(i in 1:10){
  prova<-PDS_LocalProjections(y=DATA_R_clima3[,5],x=DATA_R_clima3[,8],q=DATA_R_clima3[,c(4,6,7,9,10)],r=DATA_R_clima3[,c(1,2,3)],h=80,d=2,p=i,a=0.05)
  plots_paper[[i]]<-plot_LP(prova,name_y =colnames(DATA_R_clima3[,5]), name_x =colnames(DATA_R_clima3[,8]), unit_y = "points", unit_x = "point")+ labs(title = paste("p=",i,sep=""))
}
grid.arrange(grobs=plots_paper,top=paste("One unit impulse of",colnames(DATA_R_clima3[,8]),sep=" "))

## impulse of CH4 on T ##
for(i in 1:10){
  prova<-PDS_LocalProjections(y=DATA_R_clima3[,5],x=DATA_R_clima3[,9],q=DATA_R_clima3[,c(4,6,7,10)],r=DATA_R_clima3[,c(1,2,3,8)],h=80,d=2,p=i,a=0.05)
  plots_paper[[i]]<-plot_LP(prova,name_y =colnames(DATA_R_clima3[,5]), name_x =colnames(DATA_R_clima3[,9]), unit_y = "points", unit_x = "point")+ labs(title = paste("p=",i,sep=""))
}
grid.arrange(grobs=plots_paper,top=paste("One unit impulse of",colnames(DATA_R_clima3[,9]),sep=" "))

## impulse of N2O on T ##
for(i in 1:10){
  prova<-PDS_LocalProjections(y=DATA_R_clima3[,5],x=DATA_R_clima3[,10],q=DATA_R_clima3[,c(4,6,7)],r=DATA_R_clima3[,c(1,2,3,8,9)],h=80,d=2,p=i,a=0.05)
  plots_paper[[i]]<-plot_LP(prova,name_y =colnames(DATA_R_clima3[,5]), name_x =colnames(DATA_R_clima3[,10]), unit_y = "points", unit_x = "point")+ labs(title = paste("p=",i,sep=""))
}
grid.arrange(grobs=plots_paper,top=paste("One unit impulse of",colnames(DATA_R_clima3[,10]),sep=" "))


## impulse of Y on T ##
for(i in 1:10){
  prova<-PDS_LocalProjections(y=DATA_R_clima3[,5],x=DATA_R_clima3[,3],q=DATA_R_clima3[,c(4,6,7,8,9,10)],r=DATA_R_clima3[,c(1,2)],h=80,d=2,p=i,a=0.05)
  plots_paper[[i]]<-plot_LP(prova,name_y =colnames(DATA_R_clima3[,5]), name_x =colnames(DATA_R_clima3[,3]), unit_y = "points", unit_x = "point")+ labs(title = paste("p=",i,sep=""))
}
grid.arrange(grobs=plots_paper,top=paste("One unit impulse of",colnames(DATA_R_clima3[,3]),sep=" "))



### 10 years

prova<-PDS_LocalProjections(y=DATA_R_clima3[,5],x=DATA_R_clima3[,8],q=DATA_R_clima3[,c(4,6,7,9,10)],r=DATA_R_clima3[,c(1,2,3)],h=10,d=2,p=i,a=0.05)
plot_LP(prova,name_y =colnames(DATA_R_clima3[,5]), name_x =colnames(DATA_R_clima3[,8]), unit_y = "points", unit_x = "point")+ labs(title = paste("One unit impulse of",colnames(DATA_R_clima3[,8]),", p=",selected_lag,sep=" "))


prova<-PDS_LocalProjections(y=DATA_R_clima3[,5],x=DATA_R_clima3[,9],q=DATA_R_clima3[,c(4,6,7,10)],r=DATA_R_clima3[,c(1,2,3,8)],h=10,d=2,p=i,a=0.05)
plot_LP(prova,name_y =colnames(DATA_R_clima3[,5]), name_x =colnames(DATA_R_clima3[,9]), unit_y = "points", unit_x = "point")+ labs(title = paste("One unit impulse of",colnames(DATA_R_clima3[,9]),", p=",selected_lag,sep=" "))


prova<-PDS_LocalProjections(y=DATA_R_clima3[,5],x=DATA_R_clima3[,10],q=DATA_R_clima3[,c(4,6,7)],r=DATA_R_clima3[,c(1,2,3,8,9)],h=10,d=2,p=i,a=0.05)
plot_LP(prova,name_y =colnames(DATA_R_clima3[,5]), name_x =colnames(DATA_R_clima3[,10]), unit_y = "points", unit_x = "point")+ labs(title = paste("One unit impulse of",colnames(DATA_R_clima3[,10]),", p=",selected_lag,sep=" "))


prova<-PDS_LocalProjections(y=DATA_R_clima3[,5],x=DATA_R_clima3[,3],q=DATA_R_clima3[,c(4,6,7,8,9,10)],r=DATA_R_clima3[,c(1,2)],h=10,d=2,p=i,a=0.05)
plot_LP(prova,name_y =colnames(DATA_R_clima3[,5]), name_x =colnames(DATA_R_clima3[,3]), unit_y = "points", unit_x = "point")+ labs(title = paste("One unit impulse of",colnames(DATA_R_clima3[,3]),", p=",selected_lag,sep=" "))

### 80 years

prova<-PDS_LocalProjections(y=DATA_R_clima3[,5],x=DATA_R_clima3[,8],q=DATA_R_clima3[,c(4,6,7,9,10)],r=DATA_R_clima3[,c(1,2,3)],h=80,d=2,p=i,a=0.05)
plot_LP(prova,name_y =colnames(DATA_R_clima3[,5]), name_x =colnames(DATA_R_clima3[,8]), unit_y = "points", unit_x = "point")+ labs(title = paste("One unit impulse of",colnames(DATA_R_clima3[,8]),", p=",selected_lag,sep=" "))


prova<-PDS_LocalProjections(y=DATA_R_clima3[,5],x=DATA_R_clima3[,9],q=DATA_R_clima3[,c(4,6,7,10)],r=DATA_R_clima3[,c(1,2,3,8)],h=80,d=2,p=i,a=0.05)
plot_LP(prova,name_y =colnames(DATA_R_clima3[,5]), name_x =colnames(DATA_R_clima3[,9]), unit_y = "points", unit_x = "point")+ labs(title = paste("One unit impulse of",colnames(DATA_R_clima3[,9]),", p=",selected_lag,sep=" "))


prova<-PDS_LocalProjections(y=DATA_R_clima3[,5],x=DATA_R_clima3[,10],q=DATA_R_clima3[,c(4,6,7)],r=DATA_R_clima3[,c(1,2,3,8,9)],h=80,d=2,p=i,a=0.05)
plot_LP(prova,name_y =colnames(DATA_R_clima3[,5]), name_x =colnames(DATA_R_clima3[,10]), unit_y = "points", unit_x = "point")+ labs(title = paste("One unit impulse of",colnames(DATA_R_clima3[,10]),", p=",selected_lag,sep=" "))


prova<-PDS_LocalProjections(y=DATA_R_clima3[,5],x=DATA_R_clima3[,3],q=DATA_R_clima3[,c(4,6,7,8,9,10)],r=DATA_R_clima3[,c(1,2)],h=80,d=2,p=i,a=0.05)
plot_LP(prova,name_y =colnames(DATA_R_clima3[,5]), name_x =colnames(DATA_R_clima3[,3]), unit_y = "points", unit_x = "point")+ labs(title = paste("One unit impulse of",colnames(DATA_R_clima3[,3]),", p=",selected_lag,sep=" "))







##############################################################################################à
#### Automatic full cycle ####
Exogenous<-c("S","V")
Endogenous<-c("Y","A", "T","N","O","CO2","CH4","N2O")
Exo_var<-DATA_R_clima3[,c(1,2)]

ind=1
plots <- list()  # new empty list
for (j in 1:ncol(DATA_R_clima3)) {
  for (i in (1:ncol(DATA_R_clima3))[-j]) {
    #se i e j sono esogeni
    if((names(DATA_R_clima3[,i]) %in% Exogenous & names(DATA_R_clima3[,j]) %in% Exogenous)){
      prova<-PDS_LocalProjections(y=DATA_R_clima3[,i],x=DATA_R_clima3[,j],q=DATA_R_clima3[,-c(i,j)],h=100,d=2,p=3,a=0.05)
      p1 = plot_LP(prova,name_y =colnames(DATA_R_clima3[,i]), name_x =colnames(DATA_R_clima3[,j]), unit_y = "points", unit_x = "point")
      print(plot_LP(prova,name_y =colnames(DATA_R_clima3[,i]), name_x =colnames(DATA_R_clima3[,j]), unit_y = "points", unit_x = "point"))
      plots[[ind]] <- p1
    }
    #se i o j sono esogeni
    else if((names(DATA_R_clima3[,i]) %in% Exogenous & !(names(DATA_R_clima3[,j]) %in% Exogenous))){
      prova<-PDS_LocalProjections(y=DATA_R_clima3[,i],x=DATA_R_clima3[,j],r=DATA_R_clima3[,which(colnames(Exo_var)!=names(DATA_R_clima3[,i]))],q=DATA_R_clima3[,-c(i,j,which(colnames(Exo_var)!=names(DATA_R_clima3[,i])))],h=100,d=2,p=3,a=0.05)
      p1 = plot_LP(prova,name_y =colnames(DATA_R_clima3[,i]), name_x =colnames(DATA_R_clima3[,j]), unit_y = "points", unit_x = "point")
      print(plot_LP(prova,name_y =colnames(DATA_R_clima3[,i]), name_x =colnames(DATA_R_clima3[,j]), unit_y = "points", unit_x = "point"))
      plots[[ind]] <- p1
    }
    else if((names(DATA_R_clima3[,j]) %in% Exogenous & !(names(DATA_R_clima3[,i]) %in% Exogenous))){
      prova<-PDS_LocalProjections(y=DATA_R_clima3[,i],x=DATA_R_clima3[,j],r=DATA_R_clima3[,which(colnames(Exo_var)!=names(DATA_R_clima3[,j]))],q=DATA_R_clima3[,-c(i,j,which(colnames(Exo_var)!=names(DATA_R_clima3[,j])))],h=100,d=2,p=3,a=0.05)
      p1 = plot_LP(prova,name_y =colnames(DATA_R_clima3[,i]), name_x =colnames(DATA_R_clima3[,j]), unit_y = "points", unit_x = "point")
      print(plot_LP(prova,name_y =colnames(DATA_R_clima3[,i]), name_x =colnames(DATA_R_clima3[,j]), unit_y = "points", unit_x = "point"))
      plots[[ind]] <- p1
    }
    else{
      prova<-PDS_LocalProjections(y=DATA_R_clima3[,i],x=DATA_R_clima3[,j],r=Exo_var,q=DATA_R_clima3[,-c(i,j,which(colnames(DATA_R_clima3)==colnames(Exo_var)))],h=100,d=2,p=3,a=0.05)
      p1 = plot_LP(prova,name_y =colnames(DATA_R_clima3[,i]), name_x =colnames(DATA_R_clima3[,j]), unit_y = "points", unit_x = "point")
      print(plot_LP(prova,name_y =colnames(DATA_R_clima3[,i]), name_x =colnames(DATA_R_clima3[,j]), unit_y = "points", unit_x = "point"))
      plots[[ind]] <- p1
    }
    ind<-ind+1
  }
}

grid.arrange(grobs=plots[c(1:9)],top=paste("One unit impulse of",colnames(DATA_R_clima3[,1]),sep=" "))
#figure_paper[[2]]<-
grid.arrange(grobs=plots[c(10:18)],top=paste("One unit impulse of",colnames(DATA_R_clima3[,2]),sep=" "))
#figure_paper[[3]]<-
grid.arrange(grobs=plots[c(19:27)],top=paste("One unit impulse of",colnames(DATA_R_clima3[,3]),sep=" "))
#figure_paper[[4]]<-
grid.arrange(grobs=plots[c(28:36)],top=paste("One unit impulse of",colnames(DATA_R_clima3[,4]),sep=" "))
#figure_paper[[5]]<-
grid.arrange(grobs=plots[c(37:45)],top=paste("One unit impulse of",colnames(DATA_R_clima3[,5]),sep=" "))
#####
prova<-PDS_LocalProjections(y=DATA_R_clima3[,1],x=DATA_R_clima3[,6],r=DATA_R_clima3[,c(2)],q=DATA_R_clima3[,c(3,4,5,7,8,9,10)],h=100,d=2,p=3,a=0.05)
plot_LP(prova,name_y =colnames(DATA_R_clima3[,1]), name_x =colnames(DATA_R_clima3[,6]), unit_y = "points", unit_x = "point")
plots[[46]]<-plot_LP(prova,name_y =colnames(DATA_R_clima3[,1]), name_x =colnames(DATA_R_clima3[,6]), unit_y = "points", unit_x = "point")

prova<-PDS_LocalProjections(y=DATA_R_clima3[,2],x=DATA_R_clima3[,6],r=DATA_R_clima3[,c(1)],q=DATA_R_clima3[,c(3,4,5,7,8,9,10)],h=100,d=2,p=3,a=0.05)
plot_LP(prova,name_y =colnames(DATA_R_clima3[,2]), name_x =colnames(DATA_R_clima3[,6]), unit_y = "points", unit_x = "point")
plots[[47]]<-plot_LP(prova,name_y =colnames(DATA_R_clima3[,2]), name_x =colnames(DATA_R_clima3[,6]), unit_y = "points", unit_x = "point")

prova<-PDS_LocalProjections(y=DATA_R_clima3[,3],x=DATA_R_clima3[,6],r=DATA_R_clima3[,c(1,2)],q=DATA_R_clima3[,c(4,5,7,8,9,10)],h=100,d=2,p=3,a=0.05)
plot_LP(prova,name_y =colnames(DATA_R_clima3[,3]), name_x =colnames(DATA_R_clima3[,6]), unit_y = "points", unit_x = "point")
plots[[48]]<-plot_LP(prova,name_y =colnames(DATA_R_clima3[,3]), name_x =colnames(DATA_R_clima3[,6]), unit_y = "points", unit_x = "point")

prova<-PDS_LocalProjections(y=DATA_R_clima3[,4],x=DATA_R_clima3[,6],r=DATA_R_clima3[,c(1,2)],q=DATA_R_clima3[,c(3,5,7,8,9,10)],h=100,d=2,p=4,a=0.05)
plot_LP(prova,name_y =colnames(DATA_R_clima3[,4]), name_x =colnames(DATA_R_clima3[,6]), unit_y = "points", unit_x = "point")
plots[[49]]<-plot_LP(prova,name_y =colnames(DATA_R_clima3[,4]), name_x =colnames(DATA_R_clima3[,6]), unit_y = "points", unit_x = "point")

prova<-PDS_LocalProjections(y=DATA_R_clima3[,5],x=DATA_R_clima3[,6],r=DATA_R_clima3[,c(1,2)],q=DATA_R_clima3[,c(3,4,7,8,9,10)],h=100,d=2,p=3,a=0.05)
plot_LP(prova,name_y =colnames(DATA_R_clima3[,5]), name_x =colnames(DATA_R_clima3[,6]), unit_y = "points", unit_x = "point")
plots[[50]]<-plot_LP(prova,name_y =colnames(DATA_R_clima3[,5]), name_x =colnames(DATA_R_clima3[,6]), unit_y = "points", unit_x = "point")

prova<-PDS_LocalProjections(y=DATA_R_clima3[,7],x=DATA_R_clima3[,6],r=DATA_R_clima3[,c(1,2)],q=DATA_R_clima3[,c(3,4,5,8,9,10)],h=100,d=2,p=3,a=0.05)
plot_LP(prova,name_y =colnames(DATA_R_clima3[,7]), name_x =colnames(DATA_R_clima3[,6]), unit_y = "points", unit_x = "point")
plots[[51]]<-plot_LP(prova,name_y =colnames(DATA_R_clima3[,7]), name_x =colnames(DATA_R_clima3[,6]), unit_y = "points", unit_x = "point")

prova<-PDS_LocalProjections(y=DATA_R_clima3[,8],x=DATA_R_clima3[,6],r=DATA_R_clima3[,c(1,2)],q=DATA_R_clima3[,c(3,4,5,7,9,10)],h=100,d=2,p=3,a=0.05)
plot_LP(prova,name_y =colnames(DATA_R_clima3[,8]), name_x =colnames(DATA_R_clima3[,6]), unit_y = "points", unit_x = "point")
plots[[52]]<-plot_LP(prova,name_y =colnames(DATA_R_clima3[,8]), name_x =colnames(DATA_R_clima3[,6]), unit_y = "points", unit_x = "point")

prova<-PDS_LocalProjections(y=DATA_R_clima3[,9],x=DATA_R_clima3[,6],r=DATA_R_clima3[,c(1,2)],q=DATA_R_clima3[,c(3,4,5,7,8,10)],h=100,d=2,p=3,a=0.05)
plot_LP(prova,name_y =colnames(DATA_R_clima3[,9]), name_x =colnames(DATA_R_clima3[,6]), unit_y = "points", unit_x = "point")
plots[[53]]<-plot_LP(prova,name_y =colnames(DATA_R_clima3[,9]), name_x =colnames(DATA_R_clima3[,6]), unit_y = "points", unit_x = "point")

prova<-PDS_LocalProjections(y=DATA_R_clima3[,10],x=DATA_R_clima3[,6],r=DATA_R_clima3[,c(1,2)],q=DATA_R_clima3[,c(3,4,5,7,8,9)],h=100,d=2,p=3,a=0.05)
plot_LP(prova,name_y =colnames(DATA_R_clima3[,10]), name_x =colnames(DATA_R_clima3[,6]), unit_y = "points", unit_x = "point")
plots[[54]]<-plot_LP(prova,name_y =colnames(DATA_R_clima3[,10]), name_x =colnames(DATA_R_clima3[,6]), unit_y = "points", unit_x = "point")


grid.arrange(grobs=plots[c(46:54)],top=paste("One unit impulse of",colnames(DATA_R_clima3[,6]),sep=" "))
#####

ind=1
plots_ex <- list()  # new empty list
for (j in 7:10) {
  for (i in (1:ncol(DATA_R_clima3))[-j]) {
    #se i e j sono esogeni
    if((names(DATA_R_clima3[,i]) %in% Exogenous & names(DATA_R_clima3[,j]) %in% Exogenous)){
      prova<-PDS_LocalProjections(y=DATA_R_clima3[,i],x=DATA_R_clima3[,j],q=DATA_R_clima3[,-c(i,j)],h=100,d=2,p=3,a=0.05)
      p1 = plot_LP(prova,name_y =colnames(DATA_R_clima3[,i]), name_x =colnames(DATA_R_clima3[,j]), unit_y = "points", unit_x = "point")
      print(plot_LP(prova,name_y =colnames(DATA_R_clima3[,i]), name_x =colnames(DATA_R_clima3[,j]), unit_y = "points", unit_x = "point"))
      plots_ex[[ind]] <- p1
    }
    #se i o j sono esogeni
    else if((names(DATA_R_clima3[,i]) %in% Exogenous & !(names(DATA_R_clima3[,j]) %in% Exogenous))){
      prova<-PDS_LocalProjections(y=DATA_R_clima3[,i],x=DATA_R_clima3[,j],r=DATA_R_clima3[,which(colnames(Exo_var)!=names(DATA_R_clima3[,i]))],q=DATA_R_clima3[,-c(i,j,which(colnames(Exo_var)!=names(DATA_R_clima3[,i])))],h=100,d=2,p=3,a=0.05)
      p1 = plot_LP(prova,name_y =colnames(DATA_R_clima3[,i]), name_x =colnames(DATA_R_clima3[,j]), unit_y = "points", unit_x = "point")
      print(plot_LP(prova,name_y =colnames(DATA_R_clima3[,i]), name_x =colnames(DATA_R_clima3[,j]), unit_y = "points", unit_x = "point"))
      plots_ex[[ind]] <- p1
    }
    else if((names(DATA_R_clima3[,j]) %in% Exogenous & !(names(DATA_R_clima3[,i]) %in% Exogenous))){
      prova<-PDS_LocalProjections(y=DATA_R_clima3[,i],x=DATA_R_clima3[,j],r=DATA_R_clima3[,which(colnames(Exo_var)!=names(DATA_R_clima3[,j]))],q=DATA_R_clima3[,-c(i,j,which(colnames(Exo_var)!=names(DATA_R_clima3[,j])))],h=100,d=2,p=3,a=0.05)
      p1 = plot_LP(prova,name_y =colnames(DATA_R_clima3[,i]), name_x =colnames(DATA_R_clima3[,j]), unit_y = "points", unit_x = "point")
      print(plot_LP(prova,name_y =colnames(DATA_R_clima3[,i]), name_x =colnames(DATA_R_clima3[,j]), unit_y = "points", unit_x = "point"))
      plots_ex[[ind]] <- p1
    }
    else{
      prova<-PDS_LocalProjections(y=DATA_R_clima3[,i],x=DATA_R_clima3[,j],r=Exo_var,q=DATA_R_clima3[,-c(i,j,which(colnames(DATA_R_clima3)==colnames(Exo_var)))],h=100,d=2,p=3,a=0.05)
      p1 = plot_LP(prova,name_y =colnames(DATA_R_clima3[,i]), name_x =colnames(DATA_R_clima3[,j]), unit_y = "points", unit_x = "point")
      print(plot_LP(prova,name_y =colnames(DATA_R_clima3[,i]), name_x =colnames(DATA_R_clima3[,j]), unit_y = "points", unit_x = "point"))
      plots_ex[[ind]] <- p1
    }
    ind<-ind+1
  }
}

grid.arrange(grobs=plots_ex[c(1:9)],top=paste("One unit impulse of",colnames(DATA_R_clima3[,7]),sep=" "))
#figure_paper[[2]]<-
grid.arrange(grobs=plots_ex[c(10:18)],top=paste("One unit impulse of",colnames(DATA_R_clima3[,8]),sep=" "))
#figure_paper[[3]]<-
grid.arrange(grobs=plots_ex[c(19:27)],top=paste("One unit impulse of",colnames(DATA_R_clima3[,9]),sep=" "))
#figure_paper[[4]]<-
grid.arrange(grobs=plots_ex[c(28:36)],top=paste("One unit impulse of",colnames(DATA_R_clima3[,10]),sep=" "))
